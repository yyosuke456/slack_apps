/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package slack.socket.app;

import com.slack.api.bolt.App;
import com.slack.api.bolt.socket_mode.SocketModeApp;
import com.slack.api.model.event.MessageEvent;
import com.slack.api.model.view.View;

import static com.slack.api.model.block.Blocks.asBlocks;
import static com.slack.api.model.block.Blocks.input;
import static com.slack.api.model.block.composition.BlockCompositions.plainText;
import static com.slack.api.model.block.element.BlockElements.plainTextInput;
import static com.slack.api.model.view.Views.*;

import com.slack.api.methods.MethodsClient;
import com.slack.api.methods.response.chat.ChatGetPermalinkResponse;
import com.slack.api.methods.response.chat.ChatPostMessageResponse;
import com.slack.api.methods.response.reactions.ReactionsAddResponse;
import com.slack.api.model.event.MessageEvent;
import com.slack.api.model.event.ReactionAddedEvent;

import java.util.Arrays;
import java.util.regex.Pattern;


public class MyApp {
  public static void main(String[] args) throws Exception {
    System.setProperty("org.slf4j.simpleLogger.log.com.slack.api", "debug");

    // SLACK_BOT_TOKEN という環境変数が設定されている前提
    App app = new App();

    app.message("ここで働かせてください！", (req, ctx) -> {
      ctx.say("<@" + req.getEvent().getUser() + ">なんであたしがおまえを雇わなきゃならないんだい！？見るからにグズで！甘ったれで！泣き虫で！頭の悪い小娘に、仕事なんかあるもんかね！お断りだね。これ以上穀潰しを増やしてどうしようっていうんだい！それとも……一番つらーーいきつーーい仕事を死ぬまでやらせてやろうかぁ……？");
      return ctx.ack();
    });
    app.message("ここで働きたいんです！", (req, ctx) -> {
      ctx.say("<@" + req.getEvent().getUser() + ">わかったから静かにしておくれ！おおぉお～よ～しよし～……	契約書だよ。そこに名前を書きな。働かせてやる。その代わり嫌だとか、帰りたいとか言ったらすぐ子豚にしてやるからね。");
      return ctx.ack();
    });
    app.event(ReactionAddedEvent.class, (payload, ctx) -> {
      ReactionAddedEvent event = payload.getEvent();
      if (event.getReaction().equals("white_check_mark")) {
        ChatPostMessageResponse message = ctx.client().chatPostMessage(r -> r
          .channel(event.getItem().getChannel())
          .threadTs(event.getItem().getTs())
          .text("<@" + event.getUser() + "> ご対応いただき、本当にありがとうございました :two_hearts:"));
        if (!message.isOk()) {
          ctx.logger.error("chat.postMessage failed: {}", message.getError());
        }
      }
      return ctx.ack();
    });

    // SLACK_APP_TOKEN という環境変数が設定されている前提
    new SocketModeApp(app).start();
  }
}
